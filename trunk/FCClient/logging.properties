############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers = java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

#handlers= java.util.logging.FileHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level = OFF

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
#java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.pattern = client.log
java.util.logging.FileHandler.limit = 0
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.level = ALL
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
#java.util.logging.FileHandler.formatter = com.jme.util.logging.BetterFormatter


# Limit the message that are printed on the console to INFO and above.
#java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.level = ALL
#java.util.logging.ConsoleHandler.formatter = com.jme.util.logging.BetterFormatter
#java.util.logging.ConsoleHandler.formatter = java.util.logging.XMLFormatter


############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
#foo.bar.level = ALL
com.jme3.level = SEVERE
com.l2client.level = SEVERE
com.l2client.asset.level = SEVERE
#com.l2client.network.game.ServerPackets.level = WARNING
#com.l2client.network.level = FINE
com.l2client.dao.DatastoreDAO.level = WARNING
com.l2client.animsystem.level = WARNING
#com.l2client.controller.level = INFO
#com.l2client.component.ComponentSystem.level = FINE
com.l2client.component.PositioningSystem.level = OFF
#com.l2client.navigation.TiledNavMesh.level = FINEST
com.l2client.navigation.EntityNavigationManager.level = OFF
#com.l2client.gui.actions.GotoClickedInputAction.level = FINE
#com.l2client.network.game.ServerPackets.GameServerPacket.level = FINE
#com.l2client.controller.entity.EntityManager.level = FINER


paulscode.sound.level = SEVERE